{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { ErrorComponent } from \"./error-component\";\nexport var ErrorBoundary = function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary() {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      error: null,\n      errorInfo: null\n    };\n\n    _this.resetError = function () {\n      _this.setState({\n        error: null,\n        errorInfo: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.error !== nextProps.error;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.props.catchErrors === \"always\" || this.props.catchErrors === \"dev\" && __DEV__ || this.props.catchErrors === \"prod\" && !__DEV__;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.isEnabled() && this.state.error ? React.createElement(ErrorComponent, {\n        onReset: this.resetError,\n        error: this.state.error,\n        errorInfo: this.state.errorInfo\n      }) : this.props.children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);","map":{"version":3,"names":["React","Component","ErrorComponent","ErrorBoundary","state","error","errorInfo","resetError","setState","nextProps","nextState","props","catchErrors","__DEV__","isEnabled","children"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/screens/error/error-boundary.tsx"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from \"react\"\nimport { ErrorComponent } from \"./error-component\"\n\ninterface Props {\n  children: ReactNode\n  catchErrors: \"always\" | \"dev\" | \"prod\" | \"never\"\n}\n\ninterface State {\n  error: Error | null\n  errorInfo: ErrorInfo | null\n}\n\n/**\n * This component handles whenever the user encounters a JS error in the\n * app. It follows the \"error boundary\" pattern in React. We're using a\n * class component because according to the documentation, only class\n * components can be error boundaries.\n *\n * Read more here:\n *\n * @link: https://reactjs.org/docs/error-boundaries.html\n */\nexport class ErrorBoundary extends Component<Props, State> {\n  state = { error: null, errorInfo: null }\n\n  // If an error in a child is encountered, this will run\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo,\n    })\n\n    // You can also log error messages to an error reporting service here\n    // This is a great place to put BugSnag, Sentry, Honeybadger, etc:\n    // reportErrorToCrashReportingService(error)\n  }\n\n  // Reset the error back to null\n  resetError = () => {\n    this.setState({ error: null, errorInfo: null })\n  }\n\n  // To avoid unnecessary re-renders\n  shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>): boolean {\n    return nextState.error !== nextProps.error\n  }\n\n  // Only enable if we're catching errors in the right environment\n  isEnabled(): boolean {\n    return (\n      this.props.catchErrors === \"always\" ||\n      (this.props.catchErrors === \"dev\" && __DEV__) ||\n      (this.props.catchErrors === \"prod\" && !__DEV__)\n    )\n  }\n\n  // Render an error UI if there's an error; otherwise, render children\n  render() {\n    return this.isEnabled() && this.state.error ? (\n      <ErrorComponent\n        onReset={this.resetError}\n        error={this.state.error}\n        errorInfo={this.state.errorInfo}\n      />\n    ) : (\n      this.props.children\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAuD,OAAvD;AACA,SAASC,cAAT;AAsBA,WAAaC,aAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;;IAAA;MAAA;IAAA;;IAAA;IAAA,MACEC,KADF,GACU;MAAEC,KAAK,EAAE,IAAT;MAAeC,SAAS,EAAE;IAA1B,CADV;;IAAA,MAiBEC,UAjBF,GAiBe,YAAM;MACjB,MAAKC,QAAL,CAAc;QAAEH,KAAK,EAAE,IAAT;QAAeC,SAAS,EAAE;MAA1B,CAAd;IACD,CAnBH;;IAAA;EAAA;;EAAA;IAAA;IAAA,OAIE,2BAAkBD,KAAlB,EAAgCC,SAAhC,EAAsD;MAEpD,KAAKE,QAAL,CAAc;QACZH,KAAK,EAALA,KADY;QAEZC,SAAS,EAATA;MAFY,CAAd;IAQD;EAdH;IAAA;IAAA,OAsBE,+BAAsBG,SAAtB,EAAgDC,SAAhD,EAAmF;MACjF,OAAOA,SAAS,CAACL,KAAV,KAAoBI,SAAS,CAACJ,KAArC;IACD;EAxBH;IAAA;IAAA,OA2BE,qBAAqB;MACnB,OACE,KAAKM,KAAL,CAAWC,WAAX,KAA2B,QAA3B,IACC,KAAKD,KAAL,CAAWC,WAAX,KAA2B,KAA3B,IAAoCC,OADrC,IAEC,KAAKF,KAAL,CAAWC,WAAX,KAA2B,MAA3B,IAAqC,CAACC,OAHzC;IAKD;EAjCH;IAAA;IAAA,OAoCE,kBAAS;MACP,OAAO,KAAKC,SAAL,MAAoB,KAAKV,KAAL,CAAWC,KAA/B,GACL,oBAAC,cAAD;QACE,OAAO,EAAE,KAAKE,UADhB;QAEE,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAFpB;QAGE,SAAS,EAAE,KAAKD,KAAL,CAAWE;MAHxB,EADK,GAOL,KAAKK,KAAL,CAAWI,QAPb;IASD;EA9CH;;EAAA;AAAA,EAAmCd,SAAnC"},"metadata":{},"sourceType":"module"}