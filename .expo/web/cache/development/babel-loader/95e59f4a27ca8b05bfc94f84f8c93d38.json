{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"preset\", \"tx\", \"text\", \"style\", \"textStyle\", \"children\"];\nimport * as React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"../text/text\";\nimport { viewPresets, textPresets } from \"./button.presets\";\nexport function Button(props) {\n  var _props$preset = props.preset,\n      preset = _props$preset === void 0 ? \"primary\" : _props$preset,\n      tx = props.tx,\n      text = props.text,\n      styleOverride = props.style,\n      textStyleOverride = props.textStyle,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var viewStyle = viewPresets[preset] || viewPresets.primary;\n  var viewStyles = [viewStyle, styleOverride];\n  var textStyle = textPresets[preset] || textPresets.primary;\n  var textStyles = [textStyle, textStyleOverride];\n  var content = children || React.createElement(Text, {\n    tx: tx,\n    text: text,\n    style: textStyles\n  });\n  return React.createElement(TouchableOpacity, _extends({\n    style: viewStyles\n  }, rest), content);\n}","map":{"version":3,"names":["React","Text","viewPresets","textPresets","Button","props","preset","tx","text","styleOverride","style","textStyleOverride","textStyle","children","rest","viewStyle","primary","viewStyles","textStyles","content"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/components/button/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Text } from \"../text/text\"\nimport { viewPresets, textPresets } from \"./button.presets\"\nimport { ButtonProps } from \"./button.props\"\n\n/**\n * For your text displaying needs.\n *\n * This component is a HOC over the built-in React Native one.\n */\nexport function Button(props: ButtonProps) {\n  // grab the props\n  const {\n    preset = \"primary\",\n    tx,\n    text,\n    style: styleOverride,\n    textStyle: textStyleOverride,\n    children,\n    ...rest\n  } = props\n\n  const viewStyle = viewPresets[preset] || viewPresets.primary\n  const viewStyles = [viewStyle, styleOverride]\n  const textStyle = textPresets[preset] || textPresets.primary\n  const textStyles = [textStyle, textStyleOverride]\n\n  const content = children || <Text tx={tx} text={text} style={textStyles} />\n\n  return (\n    <TouchableOpacity style={viewStyles} {...rest}>\n      {content}\n    </TouchableOpacity>\n  )\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,IAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB;AAQA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;EAEzC,oBAQIA,KARJ,CACEC,MADF;EAAA,IACEA,MADF,8BACW,SADX;EAAA,IAEEC,EAFF,GAQIF,KARJ,CAEEE,EAFF;EAAA,IAGEC,IAHF,GAQIH,KARJ,CAGEG,IAHF;EAAA,IAISC,aAJT,GAQIJ,KARJ,CAIEK,KAJF;EAAA,IAKaC,iBALb,GAQIN,KARJ,CAKEO,SALF;EAAA,IAMEC,QANF,GAQIR,KARJ,CAMEQ,QANF;EAAA,IAOKC,IAPL,4BAQIT,KARJ;;EAUA,IAAMU,SAAS,GAAGb,WAAW,CAACI,MAAD,CAAX,IAAuBJ,WAAW,CAACc,OAArD;EACA,IAAMC,UAAU,GAAG,CAACF,SAAD,EAAYN,aAAZ,CAAnB;EACA,IAAMG,SAAS,GAAGT,WAAW,CAACG,MAAD,CAAX,IAAuBH,WAAW,CAACa,OAArD;EACA,IAAME,UAAU,GAAG,CAACN,SAAD,EAAYD,iBAAZ,CAAnB;EAEA,IAAMQ,OAAO,GAAGN,QAAQ,IAAI,oBAAC,IAAD;IAAM,EAAE,EAAEN,EAAV;IAAc,IAAI,EAAEC,IAApB;IAA0B,KAAK,EAAEU;EAAjC,EAA5B;EAEA,OACE,oBAAC,gBAAD;IAAkB,KAAK,EAAED;EAAzB,GAAyCH,IAAzC,GACGK,OADH,CADF;AAKD"},"metadata":{},"sourceType":"module"}