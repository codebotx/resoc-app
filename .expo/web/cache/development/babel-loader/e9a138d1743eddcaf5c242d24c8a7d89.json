{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { types } from \"mobx-state-tree\";\nimport { CharacterModel } from \"../character/character\";\nimport { CharacterApi } from \"../../services/api/character-api\";\nimport { withEnvironment } from \"../extensions/with-environment\";\nexport var CharacterStoreModel = types.model(\"CharacterStore\").props({\n  characters: types.optional(types.array(CharacterModel), [])\n}).extend(withEnvironment).actions(function (self) {\n  return {\n    saveCharacters: function saveCharacters(characterSnapshots) {\n      self.characters.replace(characterSnapshots);\n    }\n  };\n}).actions(function (self) {\n  return {\n    getCharacters: function getCharacters() {\n      var characterApi, result;\n      return _regeneratorRuntime.async(function getCharacters$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              characterApi = new CharacterApi(self.environment.api);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(characterApi.getCharacters());\n\n            case 3:\n              result = _context.sent;\n\n              if (result.kind === \"ok\") {\n                self.saveCharacters(result.characters);\n              } else {\n                __DEV__ && console.tron.log(result.kind);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  };\n});\nexport var createCharacterStoreDefaultModel = function createCharacterStoreDefaultModel() {\n  return types.optional(CharacterStoreModel, {});\n};","map":{"version":3,"names":["types","CharacterModel","CharacterApi","withEnvironment","CharacterStoreModel","model","props","characters","optional","array","extend","actions","self","saveCharacters","characterSnapshots","replace","getCharacters","characterApi","environment","api","result","kind","__DEV__","console","tron","log","createCharacterStoreDefaultModel"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/models/character-store/character-store.ts"],"sourcesContent":["import { Instance, SnapshotIn, SnapshotOut, types } from \"mobx-state-tree\"\nimport { CharacterModel, CharacterSnapshotOut } from \"../character/character\"\nimport { CharacterApi } from \"../../services/api/character-api\"\nimport { withEnvironment } from \"../extensions/with-environment\"\n\n/**\n * Example store containing Rick and Morty characters\n */\nexport const CharacterStoreModel = types\n  .model(\"CharacterStore\")\n  .props({\n    characters: types.optional(types.array(CharacterModel), []),\n  })\n  .extend(withEnvironment)\n  .actions((self) => ({\n    saveCharacters: (characterSnapshots: CharacterSnapshotOut[]) => {\n      self.characters.replace(characterSnapshots)\n    },\n  }))\n  .actions((self) => ({\n    getCharacters: async () => {\n      const characterApi = new CharacterApi(self.environment.api)\n      const result = await characterApi.getCharacters()\n\n      if (result.kind === \"ok\") {\n        self.saveCharacters(result.characters)\n      } else {\n        __DEV__ && console.tron.log(result.kind)\n      }\n    },\n  }))\n\nexport interface CharacterStore extends Instance<typeof CharacterStoreModel> {}\nexport interface CharacterStoreSnapshotOut extends SnapshotOut<typeof CharacterStoreModel> {}\nexport interface CharacterStoreSnapshotIn extends SnapshotIn<typeof CharacterStoreModel> {}\nexport const createCharacterStoreDefaultModel = () => types.optional(CharacterStoreModel, {})\n"],"mappings":";AAAA,SAA4CA,KAA5C,QAAyD,iBAAzD;AACA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,SAASC,eAAT;AAKA,OAAO,IAAMC,mBAAmB,GAAGJ,KAAK,CACrCK,KADgC,CAC1B,gBAD0B,EAEhCC,KAFgC,CAE1B;EACLC,UAAU,EAAEP,KAAK,CAACQ,QAAN,CAAeR,KAAK,CAACS,KAAN,CAAYR,cAAZ,CAAf,EAA4C,EAA5C;AADP,CAF0B,EAKhCS,MALgC,CAKzBP,eALyB,EAMhCQ,OANgC,CAMxB,UAACC,IAAD;EAAA,OAAW;IAClBC,cAAc,EAAE,wBAACC,kBAAD,EAAgD;MAC9DF,IAAI,CAACL,UAAL,CAAgBQ,OAAhB,CAAwBD,kBAAxB;IACD;EAHiB,CAAX;AAAA,CANwB,EAWhCH,OAXgC,CAWxB,UAACC,IAAD;EAAA,OAAW;IAClBI,aAAa,EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cACPC,YADO,GACQ,IAAIf,YAAJ,CAAiBU,IAAI,CAACM,WAAL,CAAiBC,GAAlC,CADR;cAAA;cAAA,iCAEQF,YAAY,CAACD,aAAb,EAFR;;YAAA;cAEPI,MAFO;;cAIb,IAAIA,MAAM,CAACC,IAAP,KAAgB,IAApB,EAA0B;gBACxBT,IAAI,CAACC,cAAL,CAAoBO,MAAM,CAACb,UAA3B;cACD,CAFD,MAEO;gBACLe,OAAO,IAAIC,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBL,MAAM,CAACC,IAAxB,CAAX;cACD;;YARY;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EADG,CAAX;AAAA,CAXwB,CAA5B;AA2BP,OAAO,IAAMK,gCAAgC,GAAG,SAAnCA,gCAAmC;EAAA,OAAM1B,KAAK,CAACQ,QAAN,CAAeJ,mBAAf,EAAoC,EAApC,CAAN;AAAA,CAAzC"},"metadata":{},"sourceType":"module"}