{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"placeholderTx\", \"placeholder\", \"labelTx\", \"label\", \"preset\", \"style\", \"inputStyle\", \"forwardedRef\"];\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { color, spacing, typography } from \"../../theme\";\nimport { translate } from \"../../i18n\";\nimport { Text } from \"../text/text\";\nvar CONTAINER = {\n  paddingVertical: spacing[3]\n};\nvar INPUT = {\n  fontFamily: typography.primary,\n  color: color.text,\n  minHeight: 44,\n  fontSize: 18,\n  backgroundColor: color.palette.white\n};\nvar PRESETS = {\n  default: {}\n};\nexport function TextField(props) {\n  var placeholderTx = props.placeholderTx,\n      placeholder = props.placeholder,\n      labelTx = props.labelTx,\n      label = props.label,\n      _props$preset = props.preset,\n      preset = _props$preset === void 0 ? \"default\" : _props$preset,\n      styleOverride = props.style,\n      inputStyleOverride = props.inputStyle,\n      forwardedRef = props.forwardedRef,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var containerStyles = [CONTAINER, PRESETS[preset], styleOverride];\n  var inputStyles = [INPUT, inputStyleOverride];\n  var actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder;\n  return React.createElement(View, {\n    style: containerStyles\n  }, React.createElement(Text, {\n    preset: \"fieldLabel\",\n    tx: labelTx,\n    text: label\n  }), React.createElement(TextInput, _extends({\n    placeholder: actualPlaceholder,\n    placeholderTextColor: color.palette.lighterGrey,\n    underlineColorAndroid: color.transparent\n  }, rest, {\n    style: inputStyles,\n    ref: forwardedRef\n  })));\n}","map":{"version":3,"names":["React","color","spacing","typography","translate","Text","CONTAINER","paddingVertical","INPUT","fontFamily","primary","text","minHeight","fontSize","backgroundColor","palette","white","PRESETS","default","TextField","props","placeholderTx","placeholder","labelTx","label","preset","styleOverride","style","inputStyleOverride","inputStyle","forwardedRef","rest","containerStyles","inputStyles","actualPlaceholder","lighterGrey","transparent"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/components/text-field/text-field.tsx"],"sourcesContent":["import React from \"react\"\nimport { StyleProp, TextInput, TextInputProps, TextStyle, View, ViewStyle } from \"react-native\"\nimport { color, spacing, typography } from \"../../theme\"\nimport { translate, TxKeyPath } from \"../../i18n\"\nimport { Text } from \"../text/text\"\n\n// the base styling for the container\nconst CONTAINER: ViewStyle = {\n  paddingVertical: spacing[3],\n}\n\n// the base styling for the TextInput\nconst INPUT: TextStyle = {\n  fontFamily: typography.primary,\n  color: color.text,\n  minHeight: 44,\n  fontSize: 18,\n  backgroundColor: color.palette.white,\n}\n\n// currently we have no presets, but that changes quickly when you build your app.\nconst PRESETS: { [name: string]: ViewStyle } = {\n  default: {},\n}\n\nexport interface TextFieldProps extends TextInputProps {\n  /**\n   * The placeholder i18n key.\n   */\n  placeholderTx?: TxKeyPath\n\n  /**\n   * The Placeholder text if no placeholderTx is provided.\n   */\n  placeholder?: string\n\n  /**\n   * The label i18n key.\n   */\n  labelTx?: TxKeyPath\n\n  /**\n   * The label text if no labelTx is provided.\n   */\n  label?: string\n\n  /**\n   * Optional container style overrides useful for margins & padding.\n   */\n  style?: StyleProp<ViewStyle>\n\n  /**\n   * Optional style overrides for the input.\n   */\n  inputStyle?: StyleProp<TextStyle>\n\n  /**\n   * Various look & feels.\n   */\n  preset?: keyof typeof PRESETS\n\n  forwardedRef?: any\n}\n\n/**\n * A component which has a label and an input together.\n */\nexport function TextField(props: TextFieldProps) {\n  const {\n    placeholderTx,\n    placeholder,\n    labelTx,\n    label,\n    preset = \"default\",\n    style: styleOverride,\n    inputStyle: inputStyleOverride,\n    forwardedRef,\n    ...rest\n  } = props\n\n  const containerStyles = [CONTAINER, PRESETS[preset], styleOverride]\n  const inputStyles = [INPUT, inputStyleOverride]\n  const actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder\n\n  return (\n    <View style={containerStyles}>\n      <Text preset=\"fieldLabel\" tx={labelTx} text={label} />\n      <TextInput\n        placeholder={actualPlaceholder}\n        placeholderTextColor={color.palette.lighterGrey}\n        underlineColorAndroid={color.transparent}\n        {...rest}\n        style={inputStyles}\n        ref={forwardedRef}\n      />\n    </View>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,UAAzB;AACA,SAASC,SAAT;AACA,SAASC,IAAT;AAGA,IAAMC,SAAoB,GAAG;EAC3BC,eAAe,EAAEL,OAAO,CAAC,CAAD;AADG,CAA7B;AAKA,IAAMM,KAAgB,GAAG;EACvBC,UAAU,EAAEN,UAAU,CAACO,OADA;EAEvBT,KAAK,EAAEA,KAAK,CAACU,IAFU;EAGvBC,SAAS,EAAE,EAHY;EAIvBC,QAAQ,EAAE,EAJa;EAKvBC,eAAe,EAAEb,KAAK,CAACc,OAAN,CAAcC;AALR,CAAzB;AASA,IAAMC,OAAsC,GAAG;EAC7CC,OAAO,EAAE;AADoC,CAA/C;AA8CA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;EAC/C,IACEC,aADF,GAUID,KAVJ,CACEC,aADF;EAAA,IAEEC,WAFF,GAUIF,KAVJ,CAEEE,WAFF;EAAA,IAGEC,OAHF,GAUIH,KAVJ,CAGEG,OAHF;EAAA,IAIEC,KAJF,GAUIJ,KAVJ,CAIEI,KAJF;EAAA,oBAUIJ,KAVJ,CAKEK,MALF;EAAA,IAKEA,MALF,8BAKW,SALX;EAAA,IAMSC,aANT,GAUIN,KAVJ,CAMEO,KANF;EAAA,IAOcC,kBAPd,GAUIR,KAVJ,CAOES,UAPF;EAAA,IAQEC,YARF,GAUIV,KAVJ,CAQEU,YARF;EAAA,IASKC,IATL,4BAUIX,KAVJ;;EAYA,IAAMY,eAAe,GAAG,CAAC1B,SAAD,EAAYW,OAAO,CAACQ,MAAD,CAAnB,EAA6BC,aAA7B,CAAxB;EACA,IAAMO,WAAW,GAAG,CAACzB,KAAD,EAAQoB,kBAAR,CAApB;EACA,IAAMM,iBAAiB,GAAGb,aAAa,GAAGjB,SAAS,CAACiB,aAAD,CAAZ,GAA8BC,WAArE;EAEA,OACE,oBAAC,IAAD;IAAM,KAAK,EAAEU;EAAb,GACE,oBAAC,IAAD;IAAM,MAAM,EAAC,YAAb;IAA0B,EAAE,EAAET,OAA9B;IAAuC,IAAI,EAAEC;EAA7C,EADF,EAEE,oBAAC,SAAD;IACE,WAAW,EAAEU,iBADf;IAEE,oBAAoB,EAAEjC,KAAK,CAACc,OAAN,CAAcoB,WAFtC;IAGE,qBAAqB,EAAElC,KAAK,CAACmC;EAH/B,GAIML,IAJN;IAKE,KAAK,EAAEE,WALT;IAME,GAAG,EAAEH;EANP,GAFF,CADF;AAaD"},"metadata":{},"sourceType":"module"}