{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport function AutoImage(props) {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageSize = _useState2[0],\n      setImageSize = _useState2[1];\n\n  useLayoutEffect(function () {\n    var _props$source;\n\n    var mounted = true;\n\n    if ((_props$source = props.source) != null && _props$source.uri) {\n      RNImage.getSize(props.source.uri, function (width, height) {\n        if (mounted) setImageSize({\n          width: width,\n          height: height\n        });\n      });\n    } else if (Platform.OS === \"web\") {\n      RNImage.getSize(props.source, function (width, height) {\n        if (mounted) setImageSize({\n          width: width,\n          height: height\n        });\n      });\n    } else {\n      var _RNImage$resolveAsset = RNImage.resolveAssetSource(props.source),\n          width = _RNImage$resolveAsset.width,\n          height = _RNImage$resolveAsset.height;\n\n      setImageSize({\n        width: width,\n        height: height\n      });\n    }\n\n    return function () {\n      mounted = false;\n    };\n  }, [props.source]);\n  return React.createElement(RNImage, _extends({}, props, {\n    style: [imageSize, props.style]\n  }));\n}","map":{"version":3,"names":["React","useLayoutEffect","useState","AutoImage","props","width","height","imageSize","setImageSize","mounted","source","uri","RNImage","getSize","Platform","OS","resolveAssetSource","style"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/components/auto-image/auto-image.tsx"],"sourcesContent":["import React, { useLayoutEffect, useState } from \"react\"\nimport {\n  Image as RNImage,\n  ImageProps as DefaultImageProps,\n  ImageURISource,\n  Platform,\n} from \"react-native\"\n\ntype ImageProps = DefaultImageProps & {\n  source: ImageURISource\n}\n\n/**\n * An Image wrapper component that autosizes itself to the size of the actual image.\n * You can always override by passing a width and height in the style.\n * If passing only one of width/height this image component will use the actual\n * size of the other dimension.\n *\n * This component isn't required, but is provided as a convenience so that\n * we don't have to remember to explicitly set image sizes on every image instance.\n *\n * To use as a stand-in replacement import { AutoImage as Image } and remove the\n * Image import from react-native. Now all images in that file are handled by this\n * component and are web-ready if not explicitly sized in the style property.\n */\nexport function AutoImage(props: ImageProps) {\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 })\n\n  useLayoutEffect(() => {\n    let mounted = true\n\n    if (props.source?.uri) {\n      RNImage.getSize(props.source.uri as any, (width, height) => {\n        if (mounted) setImageSize({ width, height })\n      })\n    } else if (Platform.OS === \"web\") {\n      // web requires a different method to get it's size\n      RNImage.getSize(props.source as any, (width, height) => {\n        if (mounted) setImageSize({ width, height })\n      })\n    } else {\n      const { width, height } = RNImage.resolveAssetSource(props.source)\n      setImageSize({ width, height })\n    }\n\n    return () => {\n      mounted = false\n    }\n  }, [props.source])\n\n  return <RNImage {...props} style={[imageSize, props.style]} />\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAyBA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAsC;EAC3C,gBAAkCF,QAAQ,CAAC;IAAEG,KAAK,EAAE,CAAT;IAAYC,MAAM,EAAE;EAApB,CAAD,CAA1C;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EAEAP,eAAe,CAAC,YAAM;IAAA;;IACpB,IAAIQ,OAAO,GAAG,IAAd;;IAEA,qBAAIL,KAAK,CAACM,MAAV,aAAI,cAAcC,GAAlB,EAAuB;MACrBC,OAAO,CAACC,OAAR,CAAgBT,KAAK,CAACM,MAAN,CAAaC,GAA7B,EAAyC,UAACN,KAAD,EAAQC,MAAR,EAAmB;QAC1D,IAAIG,OAAJ,EAAaD,YAAY,CAAC;UAAEH,KAAK,EAALA,KAAF;UAASC,MAAM,EAANA;QAAT,CAAD,CAAZ;MACd,CAFD;IAGD,CAJD,MAIO,IAAIQ,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MAEhCH,OAAO,CAACC,OAAR,CAAgBT,KAAK,CAACM,MAAtB,EAAqC,UAACL,KAAD,EAAQC,MAAR,EAAmB;QACtD,IAAIG,OAAJ,EAAaD,YAAY,CAAC;UAAEH,KAAK,EAALA,KAAF;UAASC,MAAM,EAANA;QAAT,CAAD,CAAZ;MACd,CAFD;IAGD,CALM,MAKA;MACL,4BAA0BM,OAAO,CAACI,kBAAR,CAA2BZ,KAAK,CAACM,MAAjC,CAA1B;MAAA,IAAQL,KAAR,yBAAQA,KAAR;MAAA,IAAeC,MAAf,yBAAeA,MAAf;;MACAE,YAAY,CAAC;QAAEH,KAAK,EAALA,KAAF;QAASC,MAAM,EAANA;MAAT,CAAD,CAAZ;IACD;;IAED,OAAO,YAAM;MACXG,OAAO,GAAG,KAAV;IACD,CAFD;EAGD,CApBc,EAoBZ,CAACL,KAAK,CAACM,MAAP,CApBY,CAAf;EAsBA,OAAO,oBAAC,OAAD,eAAaN,KAAb;IAAoB,KAAK,EAAE,CAACG,SAAD,EAAYH,KAAK,CAACa,KAAlB;EAA3B,GAAP;AACD"},"metadata":{},"sourceType":"module"}