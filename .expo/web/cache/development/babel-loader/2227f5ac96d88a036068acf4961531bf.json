{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getGeneralApiProblem } from \"./api-problem\";\nvar API_PAGE_SIZE = 50;\nexport var CharacterApi = function () {\n  function CharacterApi(api) {\n    _classCallCheck(this, CharacterApi);\n\n    this.api = api;\n  }\n\n  _createClass(CharacterApi, [{\n    key: \"getCharacters\",\n    value: function getCharacters() {\n      var response, problem, characters;\n      return _regeneratorRuntime.async(function getCharacters$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.api.apisauce.get(\"https://raw.githubusercontent.com/infinitered/ignite/master/data/rick-and-morty.json\", {\n                amount: API_PAGE_SIZE\n              }));\n\n            case 3:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              problem = getGeneralApiProblem(response);\n\n              if (!problem) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", problem);\n\n            case 8:\n              characters = response.data.results;\n              return _context.abrupt(\"return\", {\n                kind: \"ok\",\n                characters: characters\n              });\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              __DEV__ && console.tron.log(_context.t0.message);\n              return _context.abrupt(\"return\", {\n                kind: \"bad-data\"\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 12]], Promise);\n    }\n  }]);\n\n  return CharacterApi;\n}();","map":{"version":3,"names":["getGeneralApiProblem","API_PAGE_SIZE","CharacterApi","api","apisauce","get","amount","response","ok","problem","characters","data","results","kind","__DEV__","console","tron","log","message"],"sources":["D:/Projects/Projects Hub/resoc-nativeapp/ResocAppex/app/services/api/character-api.ts"],"sourcesContent":["import { ApiResponse } from \"apisauce\"\nimport { Api } from \"./api\"\nimport { GetCharactersResult } from \"./api.types\"\nimport { getGeneralApiProblem } from \"./api-problem\"\n\nconst API_PAGE_SIZE = 50\n\nexport class CharacterApi {\n  private api: Api\n\n  constructor(api: Api) {\n    this.api = api\n  }\n\n  async getCharacters(): Promise<GetCharactersResult> {\n    try {\n      // make the api call\n      const response: ApiResponse<any> = await this.api.apisauce.get(\n        \"https://raw.githubusercontent.com/infinitered/ignite/master/data/rick-and-morty.json\",\n        { amount: API_PAGE_SIZE },\n      )\n\n      // the typical ways to die when calling an api\n      if (!response.ok) {\n        const problem = getGeneralApiProblem(response)\n        if (problem) return problem\n      }\n\n      const characters = response.data.results\n\n      return { kind: \"ok\", characters }\n    } catch (e) {\n      __DEV__ && console.tron.log(e.message)\n      return { kind: \"bad-data\" }\n    }\n  }\n}\n"],"mappings":";;;AAGA,SAASA,oBAAT;AAEA,IAAMC,aAAa,GAAG,EAAtB;AAEA,WAAaC,YAAb;EAGE,sBAAYC,GAAZ,EAAsB;IAAA;;IACpB,KAAKA,GAAL,GAAWA,GAAX;EACD;;EALH;IAAA;IAAA,OAOE;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAG6C,KAAKA,GAAL,CAASC,QAAT,CAAkBC,GAAlB,CACvC,sFADuC,EAEvC;gBAAEC,MAAM,EAAEL;cAAV,CAFuC,CAH7C;;YAAA;cAGUM,QAHV;;cAAA,IASSA,QAAQ,CAACC,EATlB;gBAAA;gBAAA;cAAA;;cAUYC,OAVZ,GAUsBT,oBAAoB,CAACO,QAAD,CAV1C;;cAAA,KAWUE,OAXV;gBAAA;gBAAA;cAAA;;cAAA,iCAW0BA,OAX1B;;YAAA;cAcUC,UAdV,GAcuBH,QAAQ,CAACI,IAAT,CAAcC,OAdrC;cAAA,iCAgBW;gBAAEC,IAAI,EAAE,IAAR;gBAAcH,UAAU,EAAVA;cAAd,CAhBX;;YAAA;cAAA;cAAA;cAkBII,OAAO,IAAIC,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,YAAEC,OAAnB,CAAX;cAlBJ,iCAmBW;gBAAEL,IAAI,EAAE;cAAR,CAnBX;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAPF;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}