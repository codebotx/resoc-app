"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const checkFile = require('../../checkFile');
exports.default = (context) => __awaiter(void 0, void 0, void 0, function* () {
    const { print, prompt } = context;
    let repeat = true;
    let filePath = { value: '' };
    while (repeat) {
        filePath = (yield prompt.ask({
            name: 'value',
            type: 'input',
            message: "Enter the path to the file you'd like to enforce",
        }));
        try {
            // Check file for existence
            checkFile({ location: filePath.value }, context);
            repeat = false;
        }
        catch (e) {
            print.error('File not found on this machine.');
            const tryAgain = yield prompt.confirm('Would you like to try a different path?');
            repeat = tryAgain;
        }
    }
    print.success(`Enforcing DIR for ${filePath.value}`);
    return { rule: 'file', location: filePath.value };
});
//# sourceMappingURL=kickoffFile.js.map