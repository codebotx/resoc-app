"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
// TODO: Make this fancier
exports.default = (context) => __awaiter(void 0, void 0, void 0, function* () {
    const { print, prompt } = context;
    print.info(`
  * cli = Enforce a CLI existence and version
  * env = Enforce existence of an environment variable
  * file = Enforce existence of a file
  * dir = Enforce existence of a directory
  * shell = Enforce output of a command to match
  `);
    const userAnswer = yield prompt.ask({
        name: 'addRule',
        type: 'select',
        message: 'What kind of rule would you like to add?',
        choices: ['cli', 'env', 'file', 'dir', 'shell'],
    });
    return userAnswer.addRule;
});
//# sourceMappingURL=onboardAdd.js.map